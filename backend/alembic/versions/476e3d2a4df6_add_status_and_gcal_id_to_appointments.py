"""add_status_and_gcal_id_to_appointments

Revision ID: 476e3d2a4df6
Revises: 954d6434947c
Create Date: 2025-05-21 16:15:29.732305

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '476e3d2a4df6'
down_revision = '954d6434947c' # Make sure this 'Revises' ID is correct for your history
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - PLEASE POPULATE THESE MANUALLY ###

    # Add 'status' column
    op.add_column('appointments',
                  sa.Column('status', sa.String(length=50), nullable=False, server_default='scheduled')
                 )

    # Add 'google_calendar_event_id' column
    op.add_column('appointments',
                  sa.Column('google_calendar_event_id', sa.String(length=255), nullable=True)
                 )

    # Create index for 'google_calendar_event_id'
    op.create_index(op.f('ix_appointments_google_calendar_event_id'),
                    'appointments',
                    ['google_calendar_event_id'],
                    unique=False
                   )

    # Optional: Adjust Unique Constraint (if you changed it in your model)
    # If your old constraint was named 'unq_doc_time' (check your initial migration or db)
    # And if you want to change it to include status:
    # op.drop_constraint('unq_doc_time', 'appointments', type_='unique')
    # op.create_unique_constraint('unq_doc_time_status', 'appointments', ['doctor_id', 'starts_at', 'status'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - PLEASE POPULATE THESE MANUALLY ###

    # Optional: If you changed the unique constraint in upgrade(), revert it here:
    # op.drop_constraint('unq_doc_time_status', 'appointments', type_='unique')
    # op.create_unique_constraint('unq_doc_time', 'appointments', ['doctor_id', 'starts_at'])

    # Temporarily comment out or make robust if index/columns might not exist
    # This index was never created because the original upgrade was empty.
    # op.drop_index(op.f('ix_appointments_google_calendar_event_id'), table_name='appointments')

    # These columns were never created because the original upgrade was empty.
    # op.drop_column('appointments', 'google_calendar_event_id')
    # op.drop_column('appointments', 'status')

    # Since the original upgrade() corresponding to this downgrade() was a 'pass',
    # this downgrade() should also effectively be a 'pass' to correctly "undo" nothing.
    # However, Alembic still needs to run it to update its version table.
    pass # Make it a simple pass for this specific corrective step

    # ### end Alembic commands ###